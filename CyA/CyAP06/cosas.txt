  Alfabeto alphabet;
  alphabet.InsertarSimbolo('0');
  alphabet.InsertarSimbolo('1');
  std::set<int> states = {0, 1, 2};
  std::set<int> accepting_state{1};
  int initial_state{0};
  std::multimap<std::pair<char, int>, int> transitions_nfa;
  transitions_nfa.insert({{'0', 0}, 1});
  transitions_nfa.insert({{'1', 0}, 2});
  transitions_nfa.insert({{'0', 1}, 1});
  transitions_nfa.insert({{'1', 1}, 1});
  transitions_nfa.insert({{'0', 2}, 2});
  transitions_nfa.insert({{'1', 2}, 2});
  TrFunc tr(transitions_nfa);
  NFA autom(alphabet, states, transitions_nfa, initial_state, accepting_state);
  std::cout << autom << std::endl;
 
  std::string a{"1110101"};
  Cadena str(a, alphabet);
  if(autom.ReadString(str)) {
    std::cout << "Pertenece" << std::endl;
  } else {
    std::cout << "No pertenece" << std::endl;
  }